{"0":"r","1":"e","2":"a","3":"s","4":"o","5":"n","6":":","level":"error","message":"Unhandled Rejection at","service":"identity-service","timestamp":"2025-03-20T15:09:12.344Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-20T15:10:47.073Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-20T15:11:48.781Z"}
{"0":"r","1":"e","2":"a","3":"s","4":"o","5":"n","6":":","level":"error","message":"Unhandled Rejection at","service":"identity-service","timestamp":"2025-03-22T10:21:27.825Z"}
{"0":"r","1":"e","2":"a","3":"s","4":"o","5":"n","6":":","level":"error","message":"Unhandled Rejection at","service":"identity-service","timestamp":"2025-03-22T10:27:09.368Z"}
{"0":"r","1":"e","2":"a","3":"s","4":"o","5":"n","6":":","level":"error","message":"Unhandled Rejection at","service":"identity-service","timestamp":"2025-03-22T10:29:45.622Z"}
{"0":"r","1":"e","2":"a","3":"s","4":"o","5":"n","6":":","level":"error","message":"Unhandled Rejection at","service":"identity-service","timestamp":"2025-03-22T10:34:32.377Z"}
{"0":"r","1":"e","2":"a","3":"s","4":"o","5":"n","6":":","level":"error","message":"Unhandled Rejection at","service":"identity-service","timestamp":"2025-03-22T10:36:13.362Z"}
{"0":"r","1":"e","2":"a","3":"s","4":"o","5":"n","6":":","level":"error","message":"Unhandled Rejection at","service":"identity-service","timestamp":"2025-03-22T10:38:16.026Z"}
{"level":"error","message":"Unhandled Rejection at: [object Promise], reason: ReferenceError: logger is not defined","service":"identity-service","timestamp":"2025-03-22T10:41:10.076Z"}
{"level":"error","message":"Refresh token error occured generateTokens is not defined","service":"identity-service","stack":"ReferenceError: generateTokens is not defined\n    at refreshAccessToken (file:///Users/macbook/Desktop/payflex%20microservice/identity-service/src/controllers/authController.js:193:7)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-03-22T10:42:50.964Z"}
{"level":"error","message":"Refresh token error occured res.cookie is not a function","service":"identity-service","stack":"TypeError: res.cookie is not a function\n    at generateTokens (file:///Users/macbook/Desktop/payflex%20microservice/identity-service/src/common/utils/generate-token.js:12:9)\n    at refreshAccessToken (file:///Users/macbook/Desktop/payflex%20microservice/identity-service/src/controllers/authController.js:193:82)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-03-22T10:43:42.323Z"}
{"level":"error","message":"Refresh token error occurred logger is not defined","service":"identity-service","stack":"ReferenceError: logger is not defined\n    at refreshAccessTokenService (file:///Users/macbook/Desktop/payflex%20microservice/identity-service/src/services/auth-service.js:269:5)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async refreshAccessToken (file:///Users/macbook/Desktop/payflex%20microservice/identity-service/src/controllers/authController.js:166:20)","timestamp":"2025-03-22T11:09:12.850Z"}
{"code":"ERR_HTTP_INVALID_STATUS_CODE","level":"error","message":"Refresh token error occurred Invalid status code: undefined","service":"identity-service","stack":"RangeError [ERR_HTTP_INVALID_STATUS_CODE]: Invalid status code: undefined\n    at ServerResponse.writeHead (node:_http_server:358:11)\n    at ServerResponse._implicitHeader (node:_http_server:344:8)\n    at write_ (node:_http_outgoing:989:9)\n    at ServerResponse.end (node:_http_outgoing:1106:5)\n    at ServerResponse.send (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/express/lib/response.js:232:10)\n    at ServerResponse.json (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/express/lib/response.js:278:15)\n    at refreshAccessToken (file:///Users/macbook/Desktop/payflex%20microservice/identity-service/src/controllers/authController.js:129:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-03-22T11:21:07.498Z"}
{"code":"ERR_HTTP_INVALID_STATUS_CODE","level":"error","message":"Refresh token error occurred Invalid status code: undefined","service":"identity-service","stack":"RangeError [ERR_HTTP_INVALID_STATUS_CODE]: Invalid status code: undefined\n    at ServerResponse.writeHead (node:_http_server:358:11)\n    at ServerResponse._implicitHeader (node:_http_server:344:8)\n    at write_ (node:_http_outgoing:989:9)\n    at ServerResponse.end (node:_http_outgoing:1106:5)\n    at ServerResponse.send (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/express/lib/response.js:232:10)\n    at ServerResponse.json (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/express/lib/response.js:278:15)\n    at refreshAccessToken (file:///Users/macbook/Desktop/payflex%20microservice/identity-service/src/controllers/authController.js:130:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-03-22T11:28:21.573Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-22T11:31:05.685Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-22T11:32:31.233Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-22T12:00:54.557Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-22T12:02:06.833Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-22T12:03:51.336Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-22T12:08:46.239Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-22T12:09:28.715Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-22T12:11:17.630Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-22T12:11:53.277Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-22T12:49:41.262Z"}
{"level":"error","message":"\u001b[31mUser does not exist\u001b[39m","service":"identity-service","timestamp":"2025-03-23T14:34:32.534Z"}
{"level":"error","message":"\u001b[31mUser already exists\u001b[39m","service":"identity-service","timestamp":"2025-03-23T14:57:46.154Z"}
{"level":"error","message":"\u001b[31mUser already exists\u001b[39m","service":"identity-service","timestamp":"2025-03-23T14:58:43.378Z"}
{"level":"error","message":"\u001b[31mUser already exists\u001b[39m","service":"identity-service","timestamp":"2025-03-23T15:03:46.501Z"}
{"level":"error","message":"\u001b[31mUser already exists\u001b[39m","service":"identity-service","timestamp":"2025-03-23T15:04:53.514Z"}
{"level":"error","message":"\u001b[31mUser already exists\u001b[39m","service":"identity-service","timestamp":"2025-03-23T15:05:37.214Z"}
{"level":"error","message":"\u001b[31mUser already exists\u001b[39m","service":"identity-service","timestamp":"2025-03-23T15:05:37.216Z"}
{"level":"error","message":"\u001b[31m\u001b[39m\n\u001b[31mInvalid `prisma.user.create()` invocation:\u001b[39m\n\n\n\u001b[31mUnique constraint failed on the fields: (`email`)\u001b[39m","service":"identity-service","timestamp":"2025-03-23T15:07:29.305Z"}
{"level":"error","message":"\u001b[31m\u001b[39m\n\u001b[31mInvalid `prisma.user.create()` invocation:\u001b[39m\n\n\n\u001b[31mUnique constraint failed on the fields: (`email`)\u001b[39m","service":"identity-service","timestamp":"2025-03-23T15:08:26.541Z"}
{"level":"error","message":"\u001b[31mCannot read properties of undefined (reading 'email')\u001b[39m","service":"identity-service","timestamp":"2025-03-23T15:10:11.766Z"}
{"level":"error","message":"\u001b[31mupdatedUser is not defined\u001b[39m","service":"identity-service","timestamp":"2025-03-23T15:18:25.861Z"}
{"level":"error","message":"\u001b[31m\u001b[39m\n\u001b[31mInvalid `prisma.user.update()` invocation:\u001b[39m\n\n\u001b[31m{\u001b[39m\n\u001b[31m  where: {\u001b[39m\n\u001b[31m    email: \"adeyeye.toyorsi@gmail.com\"\u001b[39m\n\u001b[31m  },\u001b[39m\n\u001b[31m  data: {\u001b[39m\n\u001b[31m    otp: \"5122\",\u001b[39m\n\u001b[31m    otp_expires_at: new Date(\"2025-03-23T15:31:42.126Z\"),\u001b[39m\n\u001b[31m    ~~~~~~~~~~~~~~\u001b[39m\n\u001b[31m?   id?: String | StringFieldUpdateOperationsInput,\u001b[39m\n\u001b[31m?   first_name?: String | NullableStringFieldUpdateOperationsInput | Null,\u001b[39m\n\u001b[31m?   last_name?: String | NullableStringFieldUpdateOperationsInput | Null,\u001b[39m\n\u001b[31m?   email?: String | StringFieldUpdateOperationsInput,\u001b[39m\n\u001b[31m?   phone_number?: String | NullableStringFieldUpdateOperationsInput | Null,\u001b[39m\n\u001b[31m?   password?: String | NullableStringFieldUpdateOperationsInput | Null,\u001b[39m\n\u001b[31m?   role?: Role | EnumRoleFieldUpdateOperationsInput,\u001b[39m\n\u001b[31m?   gender?: Gender | NullableEnumGenderFieldUpdateOperationsInput | Null,\u001b[39m\n\u001b[31m?   date_of_birth?: DateTime | NullableDateTimeFieldUpdateOperationsInput | Null,\u001b[39m\n\u001b[31m?   is_email_verified?: Boolean | BoolFieldUpdateOperationsInput,\u001b[39m\n\u001b[31m?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,\u001b[39m\n\u001b[31m?   updatedAt?: DateTime | DateTimeFieldUpdateOperationsInput,\u001b[39m\n\u001b[31m?   profile_image?: ProfileImageUpdateOneWithoutUserNestedInput,\u001b[39m\n\u001b[31m?   address?: AddressUpdateOneWithoutUserNestedInput,\u001b[39m\n\u001b[31m?   refreshToken?: RefreshTokenUpdateOneWithoutUserNestedInput\u001b[39m\n\u001b[31m  }\u001b[39m\n\u001b[31m}\u001b[39m\n\n\u001b[31mUnknown argument `otp_expires_at`. Available options are marked with ?.\u001b[39m","service":"identity-service","timestamp":"2025-03-23T15:26:42.137Z"}
{"level":"error","message":"\u001b[31m\u001b[39m\n\u001b[31mInvalid `prisma.user.create()` invocation:\u001b[39m\n\n\u001b[31m{\u001b[39m\n\u001b[31m  data: {\u001b[39m\n\u001b[31m    email: \"adeyeye.toyorsi@gmail.com\",\u001b[39m\n\u001b[31m    otp: \"6381\",\u001b[39m\n\u001b[31m    otp_expires_at: new Date(\"2025-03-23T15:36:31.388Z\"),\u001b[39m\n\u001b[31m    ~~~~~~~~~~~~~~\u001b[39m\n\u001b[31m?   id?: String,\u001b[39m\n\u001b[31m?   first_name?: String | Null,\u001b[39m\n\u001b[31m?   last_name?: String | Null,\u001b[39m\n\u001b[31m?   phone_number?: String | Null,\u001b[39m\n\u001b[31m?   password?: String | Null,\u001b[39m\n\u001b[31m?   role?: Role,\u001b[39m\n\u001b[31m?   gender?: Gender | Null,\u001b[39m\n\u001b[31m?   date_of_birth?: DateTime | Null,\u001b[39m\n\u001b[31m?   is_email_verified?: Boolean,\u001b[39m\n\u001b[31m?   createdAt?: DateTime,\u001b[39m\n\u001b[31m?   updatedAt?: DateTime,\u001b[39m\n\u001b[31m?   profile_image?: ProfileImageCreateNestedOneWithoutUserInput,\u001b[39m\n\u001b[31m?   address?: AddressCreateNestedOneWithoutUserInput,\u001b[39m\n\u001b[31m?   refreshToken?: RefreshTokenCreateNestedOneWithoutUserInput\u001b[39m\n\u001b[31m  }\u001b[39m\n\u001b[31m}\u001b[39m\n\n\u001b[31mUnknown argument `otp_expires_at`. Available options are marked with ?.\u001b[39m","service":"identity-service","timestamp":"2025-03-23T15:31:31.390Z"}
{"level":"error","message":"\u001b[31muserToVerify is not defined\u001b[39m","service":"identity-service","timestamp":"2025-03-23T15:42:51.933Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-23T15:47:23.538Z"}
{"level":"error","message":"\u001b[31mEmail verification failed.\u001b[39m","service":"identity-service","timestamp":"2025-03-23T15:49:17.110Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-23T18:54:38.033Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-23T19:08:40.786Z"}
{"level":"error","message":"\u001b[31mUser with email: adeyeye.toyorsi@gmail.com already verified\u001b[39m","service":"identity-service","timestamp":"2025-03-23T19:11:11.933Z"}
{"level":"error","message":"\u001b[31mUser with email: adeyeye.toyorsi@gmail.com already exists\u001b[39m","service":"identity-service","timestamp":"2025-03-23T19:11:11.934Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-23T19:13:14.182Z"}
{"level":"error","message":"\u001b[31mresetPasswordService is not defined\u001b[39m","service":"identity-service","timestamp":"2025-03-23T19:14:01.942Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-23T19:35:03.795Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-24T15:58:32.145Z"}
{"level":"error","message":"\u001b[31mRoute not found\u001b[39m","service":"identity-service","timestamp":"2025-03-24T16:00:31.621Z"}
{"0":"p","1":"r","10":"n","11":"o","12":"t","13":" ","14":"d","15":"e","16":"f","17":"i","18":"n","19":"e","2":"i","20":"d","3":"s","4":"m","5":"a","6":" ","7":"i","8":"s","9":" ","level":"error","message":"Error fetching user details","service":"identity-service","timestamp":"2025-03-24T16:04:23.539Z"}
{"level":"error","message":"\u001b[31mFrom Identity Service: Route not found\u001b[39m","service":"identity-service","timestamp":"2025-03-24T16:06:31.428Z"}
{"0":"p","1":"r","10":"n","11":"o","12":"t","13":" ","14":"d","15":"e","16":"f","17":"i","18":"n","19":"e","2":"i","20":"d","3":"s","4":"m","5":"a","6":" ","7":"i","8":"s","9":" ","level":"error","message":"Error fetching user details","service":"identity-service","timestamp":"2025-03-24T16:09:34.502Z"}
{"0":"p","1":"r","10":"n","11":"o","12":"t","13":" ","14":"d","15":"e","16":"f","17":"i","18":"n","19":"e","2":"i","20":"d","3":"s","4":"m","5":"a","6":" ","7":"i","8":"s","9":" ","level":"error","message":"Error fetching user details","service":"identity-service","timestamp":"2025-03-24T16:10:48.342Z"}
{"0":"p","1":"r","10":"n","11":"o","12":"t","13":" ","14":"d","15":"e","16":"f","17":"i","18":"n","19":"e","2":"i","20":"d","3":"s","4":"m","5":"a","6":" ","7":"i","8":"s","9":" ","level":"error","message":"Error fetching user details","service":"identity-service","timestamp":"2025-03-24T16:12:11.091Z"}
{"level":"error","message":"Error fetching user details prisma is not defined","service":"identity-service","stack":"ReferenceError: prisma is not defined\n    at file:///Users/macbook/Desktop/payflex%20microservice/identity-service/src/controllers/user.controller.js:18:18\n    at file:///Users/macbook/Desktop/payflex%20microservice/identity-service/src/middlewares/asyncHandler.js:2:19\n    at Layer.handle [as handle_request] (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/express/lib/router/route.js:149:13)\n    at protect (file:///Users/macbook/Desktop/payflex%20microservice/identity-service/src/middlewares/authMiddleware.js:40:5)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-03-24T16:12:25.325Z"}
{"level":"error","message":"\u001b[31mFrom Identity Service: Route not found\u001b[39m","service":"identity-service","timestamp":"2025-03-24T16:18:20.168Z"}
{"level":"error","message":"\u001b[31mFrom Identity Service: Route not found\u001b[39m","service":"identity-service","timestamp":"2025-03-24T17:01:02.627Z"}
{"level":"error","message":"\u001b[31mFrom Identity Service: Route not found\u001b[39m","service":"identity-service","timestamp":"2025-03-24T17:03:05.474Z"}
{"level":"error","message":"\u001b[31mFrom Identity Service: Route not found\u001b[39m","service":"identity-service","timestamp":"2025-03-25T15:29:15.652Z"}
{"level":"error","message":"\u001b[31m(C-Log)Identity Service: Route not found\u001b[39m","service":"identity-service","timestamp":"2025-03-25T15:32:28.520Z"}
{"clientVersion":"6.5.0","level":"error","message":"Error fetching user details \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   email?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   first_name?: StringNullableFilter | String | Null,\n?   last_name?: StringNullableFilter | String | Null,\n?   phone_number?: StringNullableFilter | String | Null,\n?   password?: StringNullableFilter | String | Null,\n?   otp?: StringNullableFilter | String | Null,\n?   otp_expires_at?: DateTimeNullableFilter | DateTime | Null,\n?   role?: EnumRoleFilter | Role,\n?   gender?: EnumGenderNullableFilter | Gender | Null,\n?   date_of_birth?: DateTimeNullableFilter | DateTime | Null,\n?   is_email_verified?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   profile_image?: ProfileImageNullableScalarRelationFilter | ProfileImageWhereInput | Null,\n?   address?: AddressNullableScalarRelationFilter | AddressWhereInput | Null,\n?   refreshToken?: RefreshTokenNullableScalarRelationFilter | RefreshTokenWhereInput | Null\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","service":"identity-service","stack":"PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   email?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   first_name?: StringNullableFilter | String | Null,\n?   last_name?: StringNullableFilter | String | Null,\n?   phone_number?: StringNullableFilter | String | Null,\n?   password?: StringNullableFilter | String | Null,\n?   otp?: StringNullableFilter | String | Null,\n?   otp_expires_at?: DateTimeNullableFilter | DateTime | Null,\n?   role?: EnumRoleFilter | Role,\n?   gender?: EnumGenderNullableFilter | Gender | Null,\n?   date_of_birth?: DateTimeNullableFilter | DateTime | Null,\n?   is_email_verified?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   profile_image?: ProfileImageNullableScalarRelationFilter | ProfileImageWhereInput | Null,\n?   address?: AddressNullableScalarRelationFilter | AddressWhereInput | Null,\n?   refreshToken?: RefreshTokenNullableScalarRelationFilter | RefreshTokenWhereInput | Null\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.\n    at Cn (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at Wn.handleRequestError (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/@prisma/client/runtime/library.js:121:7177)\n    at Wn.handleAndLogRequestError (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/@prisma/client/runtime/library.js:121:6858)\n    at Wn.request (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/@prisma/client/runtime/library.js:121:6565)\n    at async l (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/@prisma/client/runtime/library.js:130:10067)\n    at async file:///Users/macbook/Desktop/payflex%20microservice/identity-service/src/controllers/user.controller.js:18:18","timestamp":"2025-03-25T15:33:34.667Z"}
{"clientVersion":"6.5.0","level":"error","message":"Error fetching user details \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   email?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   first_name?: StringNullableFilter | String | Null,\n?   last_name?: StringNullableFilter | String | Null,\n?   phone_number?: StringNullableFilter | String | Null,\n?   password?: StringNullableFilter | String | Null,\n?   otp?: StringNullableFilter | String | Null,\n?   otp_expires_at?: DateTimeNullableFilter | DateTime | Null,\n?   role?: EnumRoleFilter | Role,\n?   gender?: EnumGenderNullableFilter | Gender | Null,\n?   date_of_birth?: DateTimeNullableFilter | DateTime | Null,\n?   is_email_verified?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   profile_image?: ProfileImageNullableScalarRelationFilter | ProfileImageWhereInput | Null,\n?   address?: AddressNullableScalarRelationFilter | AddressWhereInput | Null,\n?   refreshToken?: RefreshTokenNullableScalarRelationFilter | RefreshTokenWhereInput | Null\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","service":"identity-service","stack":"PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   email?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   first_name?: StringNullableFilter | String | Null,\n?   last_name?: StringNullableFilter | String | Null,\n?   phone_number?: StringNullableFilter | String | Null,\n?   password?: StringNullableFilter | String | Null,\n?   otp?: StringNullableFilter | String | Null,\n?   otp_expires_at?: DateTimeNullableFilter | DateTime | Null,\n?   role?: EnumRoleFilter | Role,\n?   gender?: EnumGenderNullableFilter | Gender | Null,\n?   date_of_birth?: DateTimeNullableFilter | DateTime | Null,\n?   is_email_verified?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   profile_image?: ProfileImageNullableScalarRelationFilter | ProfileImageWhereInput | Null,\n?   address?: AddressNullableScalarRelationFilter | AddressWhereInput | Null,\n?   refreshToken?: RefreshTokenNullableScalarRelationFilter | RefreshTokenWhereInput | Null\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.\n    at Cn (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at Wn.handleRequestError (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/@prisma/client/runtime/library.js:121:7177)\n    at Wn.handleAndLogRequestError (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/@prisma/client/runtime/library.js:121:6858)\n    at Wn.request (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/@prisma/client/runtime/library.js:121:6565)\n    at async l (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/@prisma/client/runtime/library.js:130:10067)\n    at async file:///Users/macbook/Desktop/payflex%20microservice/identity-service/src/controllers/user.controller.js:18:18","timestamp":"2025-03-25T15:35:11.084Z"}
{"level":"error","message":"Error fetching user details Cannot access 'user' before initialization","service":"identity-service","stack":"ReferenceError: Cannot access 'user' before initialization\n    at file:///Users/macbook/Desktop/payflex%20microservice/identity-service/src/controllers/user.controller.js:19:20\n    at file:///Users/macbook/Desktop/payflex%20microservice/identity-service/src/middlewares/asyncHandler.js:2:19\n    at Layer.handle [as handle_request] (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/macbook/Desktop/payflex microservice/identity-service/node_modules/express/lib/router/route.js:149:13)\n    at protect (file:///Users/macbook/Desktop/payflex%20microservice/identity-service/src/middlewares/authMiddleware.js:41:5)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-03-25T15:36:14.776Z"}
{"level":"error","message":"\u001b[31m(C-Log)Identity Service: Route not found\u001b[39m","service":"identity-service","timestamp":"2025-03-25T16:12:45.292Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: Request failed with status code 401\u001b[39m","service":"identity-service","timestamp":"2025-03-25T16:13:43.774Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: Request failed with status code 401\u001b[39m","service":"identity-service","timestamp":"2025-03-25T16:15:26.153Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: Request failed with status code 401\u001b[39m","service":"identity-service","timestamp":"2025-03-25T16:16:22.998Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: \u001b[39m","service":"identity-service","timestamp":"2025-03-25T16:20:09.654Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: Request failed with status code 401\u001b[39m","service":"identity-service","timestamp":"2025-03-25T16:24:47.442Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: Request failed with status code 401\u001b[39m","service":"identity-service","timestamp":"2025-03-25T19:58:32.552Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: Request failed with status code 401\u001b[39m","service":"identity-service","timestamp":"2025-03-25T19:59:27.151Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: Request failed with status code 401\u001b[39m","service":"identity-service","timestamp":"2025-03-25T19:59:59.164Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: Request failed with status code 401\u001b[39m","service":"identity-service","timestamp":"2025-03-25T20:10:41.575Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: Request failed with status code 401\u001b[39m","service":"identity-service","timestamp":"2025-03-25T20:11:08.816Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: Request failed with status code 401\u001b[39m","service":"identity-service","timestamp":"2025-03-25T20:12:55.093Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: socket hang up\u001b[39m","service":"identity-service","timestamp":"2025-03-25T20:19:53.293Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: Request failed with status code 400\u001b[39m","service":"identity-service","timestamp":"2025-03-25T20:19:57.283Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: Request failed with status code 401\u001b[39m","service":"identity-service","timestamp":"2025-03-25T20:22:35.334Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: Request failed with status code 401\u001b[39m","service":"identity-service","timestamp":"2025-03-25T20:23:03.844Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: Request failed with status code 401\u001b[39m","service":"identity-service","timestamp":"2025-03-25T20:23:55.388Z"}
{"level":"error","message":"\u001b[31mError fetching transaction history: Request failed with status code 401\u001b[39m","service":"identity-service","timestamp":"2025-03-25T21:11:38.348Z"}
