
generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["identity", "transaction_histories", "banking"]
  
}

model User {
  id               String    @id @default(uuid())
  first_name       String?
  last_name        String?
  email            String    @unique
  phone_number     String?
  password         String?
  otp              String?
  otp_expires_at   DateTime?
  role             Role      @default(USER)
  gender           Gender?
  date_of_birth    DateTime?
  profile_image    ProfileImage?
  address          Address?
  is_email_verified Boolean   @default(false)
  refreshToken    RefreshToken?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  @@schema("identity")
}

model ProfileImage {
  id         String @id @default(uuid())
  userId     String @unique
  secure_url String
  public_id  String
  user       User   @relation(fields: [userId], references: [id])

  @@schema("identity")
}

model Address {
  id           String @id @default(uuid())
  userId       String @unique
  city         String?
  state        String?
  country      String?
  home_address String?
  user         User   @relation(fields: [userId], references: [id])

  @@schema("identity")
}

enum Role {
  USER
  ADMIN
  SUPER_ADMIN

  @@schema("identity")
}

enum Gender {
  MALE
  FEMALE

  @@schema("identity")
}

model RefreshToken {
  id         String   @id @default(uuid())
  token      String   @unique
  userId     String   @unique 
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt  DateTime
  createdAt  DateTime @default(now())

  @@index([expiresAt], map: "expires_at_idx")

  @@schema("identity")
}

// Transaction Table

model TransactionHistory {
  id String @id @default(uuid())
  account_id String?
  user_id String
  amount Float?
  transaction_type TransactionType?
  description String?
  status TransactionStatus?
  sender_details SenderDetails?
  recipient_mobile String?
  currency_type CurrencyType?
  payment_method PaymentMethod?
  icon TransactionIcon?
  fee Float? @default(0.0)
  transaction_number String?
  transaction_reference String? @unique
  session_id String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("transaction_histories")
}

enum TransactionType {
  transfer
  deposit
  airtime
  data
  cable
  education
  betting

  @@schema("transaction_histories")
}

enum TransactionStatus {
  pending
  success
  failed
  cancelled

  @@schema("transaction_histories")
}

enum CurrencyType {
  NGN
  USD
  GBP
  EUR

  @@schema("transaction_histories")
}

enum PaymentMethod {
  card
  bank_transfer
  wallet
  ussd

  @@schema("transaction_histories")
}

model SenderDetails {
  id String @id @default(uuid())
  transaction_id String @unique
  sender_name String
  sender_bank String
  sender_account_number String
  transaction TransactionHistory @relation(fields: [transaction_id], references: [id], onDelete: Cascade)

  @@schema("transaction_histories")
}

model TransactionIcon {
  id         String @id @default(uuid())
  transaction_id     String @unique
  secure_url String
  public_id  String
  transaction       TransactionHistory   @relation(fields: [transaction_id], references: [id])

  @@schema("transaction_histories")
}

model Account {
  id String @id @default(uuid())
  user_id String
  account_number String @unique
  accountType AccountType
  bank_name String
  bank_code String
  balance Float @default(0)
  isActive Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("banking")
}

enum AccountType {
  NGN
  USD
  EURGBP

  @@schema("banking")
}