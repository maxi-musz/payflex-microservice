// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  first_name       String?
  last_name        String?
  email            String    @unique
  phone_number     String?
  password         String?
  otp              String?
  otp_expires_at   DateTime?
  role             Role      @default(USER)
  gender           Gender?
  date_of_birth    DateTime?
  profile_image    ProfileImage?
  address          Address?
  is_email_verified Boolean   @default(false)
  refreshToken    RefreshToken?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  
}

model ProfileImage {
  id         String @id @default(uuid())
  userId     String @unique
  secure_url String
  public_id  String
  user       User   @relation(fields: [userId], references: [id])
}

model Address {
  id           String @id @default(uuid())
  userId       String @unique
  city         String?
  state        String?
  country      String?
  home_address String?
  user         User   @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}

enum Gender {
  MALE
  FEMALE
}

model RefreshToken {
  id         String   @id @default(uuid())
  token      String   @unique
  userId     String   @unique 
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt  DateTime
  createdAt  DateTime @default(now())

  @@index([expiresAt], map: "expires_at_idx")
}
